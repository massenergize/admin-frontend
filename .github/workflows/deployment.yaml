name: Build and Deploy to Netlify CI/CD
on:
  push:
    branches:
      - development
      - master
      - canary
      - setup-better-ci-cd
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    environment:
      name: Production
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: |
          npm i --legacy-peer-deps

      - name: Read old BUILD_VERSION from config.json
        run: |
          OLD_VERSION=$(jq -r '.BUILD_VERSION' app/config/config.json)
          echo "Old BUILD_VERSION: $OLD_VERSION"
  
      - name: Update BUILD_VERSION
        run: |
          CONFIG_PATH="app/config/config.json"
          # Read the config.json file
          CONFIG=$(<"$CONFIG_PATH")
          # Extract old BUILD_VERSION
          OLD_VERSION=$(jq -r '.BUILD_VERSION' <<< "$CONFIG")
          echo "Old BUILD_VERSION: $OLD_VERSION"
          # Increment the BUILD_VERSION using semantic versioning
          NEW_VERSION=$(echo "$OLD_VERSION" | awk -F '.' '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          echo "New BUILD_VERSION: $NEW_VERSION"
          # Update the config.json file with the new BUILD_VERSION
          UPDATED_CONFIG=$(echo "$CONFIG" | jq --arg new_version "$NEW_VERSION" '.BUILD_VERSION = $new_version')
          echo "$UPDATED_CONFIG" > "$CONFIG_PATH"
          git config --global user.email "me-bot@massenergize.org"
          git config --global user.name "Version Update Bot"
          git add "$CONFIG_PATH"
          git commit -m "Bump BUILD_VERSION to $NEW_VERSION"

      - name: Create and push tag
        run: |
          BUILD_VERSION=$(jq -r '.BUILD_VERSION' < app/config/config.json)
          TAG_NAME="v$BUILD_VERSION"
          echo "BUILD_VERSION: $BUILD_VERSION"
          echo "New tag name: $TAG_NAME"
          git tag -a "$TAG_NAME" -m "Version $BUILD_VERSION"
          git push origin "$TAG_NAME"

      - name: Deploy to Netlify
        if: github.ref_type == 'tag'
        uses: data-intuitive/netlify-deploy-site@v1
        with:
          auth: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          dir: 'build'
          site: ${{ secrets.NETLIFY_PROD_SITE_ID }}
          prod: true
          message: 'Deploying ${{ github.ref }}'

      - name: Report status to Slack
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          MESSAGE="Workflow *${{ github.ref }}* has completed with status: *${{ job.status }}*"
          PAYLOAD="{\"text\": \"$MESSAGE\"}"
          curl -X POST -H 'Content-type: application/json' --data "$PAYLOAD" $SLACK_WEBHOOK_URL
